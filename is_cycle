def all_nodes(data):
    nodes = {}
    for i in data:
        nodes[i[0]] = True
        nodes[i[1]] = True
    return list(nodes)

def find_children(data,point):
    children = []
    for i in data:
        if i[0] == point:
            children.append(i[1])
    return children
     
def find_parent(data,point):
    parents = []
    for i in data:
        if i[1] == point:
            parents.append(i[0])
    return parents
def is_cycle(data):
    visited = {}
    an = all_nodes(data)
    an_copy = all_nodes(data)
    queue = find_children(data, an[0])
    first = an[0]
    visited[first] = True
    an.remove(first)
    an.remove(queue[0])
    while len(visited) != len(an_copy):
        if len(queue) == 0:
            for i in an:
                if i not in visited:
                    if find_parent(data,i) != []:
                        queue.append(i)
                        an.remove(queue[0])
                        break
        if len(queue) == 0:
            q = i
            break
        visited[queue[0]] = True
        for i in find_children(data,queue[0]):
            if i in an:
                queue.append(i)
                an.remove(i)
                if i in list(visited):
                    return True
        q = queue[0]
        queue.pop(0)
  
    for i in find_children(data,q):
        if find_parent(data,q) != []:
            if i == first:
                return True
    return False

data1 = [(1,2),(3,4),(5,6),(7,8)]
if is_cycle(data1) != False:
    print(is_cycle(data1))
    print('cycle breaked at ',data1)
    assert is_cycle(data1),False
print('passed')

data2 = [(0,1),(1,2),(3,4),(4,2),(5,6),(7,8)]
if is_cycle(data2) != False:
    print('cycle breaked at ',data2)
    assert is_cycle(data2), False

print('passed')
data3 = [(2,3),(3,4),(4,5),(6,5),(6,1),(2,1),(2,7),(4,7),(7,5),(7,6),(1,7),(7,1),(2,4)]
if is_cycle(data3) != True:
    print('cycle breaked at ', data3)
    assert is_cycle(data3),True

print('passed')

data4 = [(1,2),(2,3),(4,1),(5,4)]
if is_cycle(data4) != False:
    print('cycle breaked')
print('passed')

data5 = [(1,2),(2,3),(3,1)]
if is_cycle(data5) != True:
    print('cycle failed ')
